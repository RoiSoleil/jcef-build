name: build
on:
   push:
      branches:
      - main
jobs:
#
#
   create-release:
      runs-on: ubuntu-latest
      outputs:
         upload_url: ${{ steps.create-release.outputs.upload_url }}
      steps:
      -  name: Identifier
         id: identifier
         run: echo "::set-output name=identifier::$(date +'%s')"
      -  name: Create a release
         id: create-release
         uses: actions/create-release@v1
         env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
            tag_name: release-${{ steps.identifier.outputs.identifier }}
            release_name: Release
#
#
   build-win64:
      needs: create-release
      runs-on: windows-latest
      steps:
      -  name: Set up JDK 8
         uses: actions/setup-java@v2
         with:
            distribution: adopt
            java-version: 8
      -  name: Set up Python 3.7
         uses: actions/setup-python@v2
         with:
            python-version: 3.7
            architecture: x64
      -  name: Set up MS Build
         uses: microsoft/setup-msbuild@v1.1
         with:
            msbuild-architecture: x64
      -  name: Checkout jcef project
         run: |
            export JCEF_DIR="$PWD/src"
            git clone https://github.com/chromiumembedded/java-cef.git $JCEF_DIR
            mkdir -p $JCEF_DIR/jcef_build
         shell: bash
      -  name: Build
         run: |
            set JCEF_DIR="%cd%/src"
            set PYTHON_EXECUTABLE=c:/hostedtoolcache/windows/Python/3.7.9/x64/python.exe
            cd %JCEF_DIR%\jcef_build
            cmake -G "Visual Studio 16" -A x64 ..
            msbuild.exe ALL_BUILD.vcxproj /property:Configuration=Release
            cd ../tools
            call compile.bat win64
            call make_distrib.bat win64
            cd ../binary_distrib/win64
            7z a -tzip -r jcef-win64.zip *
            move jcef-win64.zip ../../../
         shell: cmd
      -  name: Upload
         uses: actions/upload-release-asset@v1
         env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
            upload_url: ${{ needs.create-release.outputs.upload_url }}
            asset_path: ./jcef-win64.zip
            asset_name: jcef-win64.zip
            asset_content_type: application/zip
#
#
   build-win32:
      needs: create-release
      runs-on: windows-latest
      steps:
      -  name: Set up JDK 8
         uses: actions/setup-java@v2
         with:
            distribution: zulu
            java-version: 8
            architecture: x86
      -  name: Set up Python 3.7
         uses: actions/setup-python@v2
         with:
            python-version: 3.7
            architecture: x86
      -  name: Set up MS Build
         uses: microsoft/setup-msbuild@v1.1
         with:
            msbuild-architecture: x86
      -  name: Checkout jcef project
         run: |
            export JCEF_DIR="$PWD/src"
            git clone https://github.com/chromiumembedded/java-cef.git $JCEF_DIR
            mkdir -p $JCEF_DIR/jcef_build
         shell: bash
      -  name: Build
         run: |
            set JCEF_DIR="%cd%/src"
            set PYTHON_EXECUTABLE=c:/hostedtoolcache/windows/Python/3.7.9/x86/python.exe
            cd %JCEF_DIR%/jcef_build
            cmake -G "Visual Studio 16" -A Win32 ..
            msbuild.exe ALL_BUILD.vcxproj /property:Configuration=Release
            cd ../tools
            call compile.bat win32
            call make_distrib.bat win32
            cd ../binary_distrib/win32
            7z a -tzip -r jcef-win32.zip *
            move jcef-win32.zip ../../../
         shell: cmd
      -  name: Upload
         uses: actions/upload-release-asset@v1
         env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
            upload_url: ${{ needs.create-release.outputs.upload_url }}
            asset_path: ./jcef-win32.zip
            asset_name: jcef-win32.zip
            asset_content_type: application/zip
#
#
   build-linux64:
      needs: create-release
      runs-on: ubuntu-latest
      steps:
      -  name: Set up JDK 8
         uses: actions/setup-java@v2
         with:
            distribution: adopt
            java-version: 8
      -  name: Set up Python 3.7
         uses: actions/setup-python@v2
         with:
            python-version: 3.7
            architecture: x64
      -  name: Set up Clang
         uses: egor-tensin/setup-clang@v1
         with:
            version: latest
            platform: x64
      -  name: Checkout jcef project
         run: |
            export JCEF_DIR="$PWD/src"
            git clone https://github.com/chromiumembedded/java-cef.git $JCEF_DIR
            mkdir -p $JCEF_DIR/jcef_build
         shell: bash
      -  name: Build
         run: |
            export JCEF_DIR="$PWD/src"
            export PYTHON_EXECUTABLE=/opt/hostedtoolcache/Python/3.7.12/x64/python
            cd $JCEF_DIR/jcef_build
            cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release ..
            make -j4
            cd ../tools
            ./compile.sh linux64
            ./make_distrib.sh linux64
            cd ../binary_distrib/linux64/bin/lib/linux64
            strip --strip-all ./*.so
            cd ../../../
            zip -r jcef-linux64.zip *
            mv jcef-linux64.zip ../../../
         shell: bash
      -  name: Upload
         uses: actions/upload-release-asset@v1
         env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
            upload_url: ${{ needs.create-release.outputs.upload_url }}
            asset_path: ./jcef-linux64.zip
            asset_name: jcef-linux64.zip
            asset_content_type: application/zip
#
#
   build-linux32:
      needs: create-release
      runs-on: ubuntu-latest
      steps:
      -  name: Set up JDK 8
         uses: actions/setup-java@v2
         with:
            distribution: adopt
            java-version: 8
            architecture: x86
      -  name: Set up Python 3.7
         uses: actions/setup-python@v2
         with:
            python-version: 3.7
            architecture: x64
      -  name: Set up Clang
         uses: egor-tensin/setup-clang@v1
         with:
            version: latest
            platform: x86
      -  name: Checkout jcef project
         run: |
            export JCEF_DIR="$PWD/src"
            git clone https://github.com/chromiumembedded/java-cef.git $JCEF_DIR
            mkdir -p $JCEF_DIR/jcef_build
         shell: bash
      -  name: Build
         run: |
            sed -i 's/set(CEF_PLATFORM "linux64")/set(CEF_PLATFORM "linux32")/g' src/CMakeLists.txt
            sudo dpkg --add-architecture i386
            sudo apt-get update
            sudo apt-get install libx11-dev:i386 libgtk2.0-0:i386 libsm6:i386 libnss3:i386 libatk-bridge2.0-0:i386 libdrm2:i386 libxkbcommon0:i386 libgbm1:i386 libasound2:i386 libxshmfence1:i386
            export JCEF_DIR="$PWD/src"
            export PYTHON_EXECUTABLE=/opt/hostedtoolcache/Python/3.7.12/x64/python
            cd $JCEF_DIR/jcef_build
            cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DPROJECT_ARCH=x86 ..
            make -j4
            cd ../tools
            ./compile.sh linux32
            ./make_distrib.sh linux32
            cd ../binary_distrib/linux32/bin/lib/linux32
            strip --strip-all ./*.so
            cd ../../../
            zip -r jcef-linux32.zip *
            mv jcef-linux32.zip ../../../
         shell: bash
      -  name: Upload
         uses: actions/upload-release-asset@v1
         env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
            upload_url: ${{ needs.create-release.outputs.upload_url }}
            asset_path: ./jcef-linux32.zip
            asset_name: jcef-linux32.zip
            asset_content_type: application/zip
#
#
   build-macosx64:
         needs: create-release
         runs-on: macos-latest
         steps:
         -  name: Set up JDK 8
            uses: actions/setup-java@v2
            with:
               distribution: adopt
               java-version: 8
         -  name: Set up Python 3.7
            uses: actions/setup-python@v2
            with:
               python-version: 3.7
               architecture: x64
         -  name: Checkout jcef project
            run: |
               export JCEF_DIR="$PWD/src"
               git clone https://github.com/chromiumembedded/java-cef.git $JCEF_DIR
               mkdir -p $JCEF_DIR/jcef_build
            shell: bash
         -  name: Build
            run: |
               export JCEF_DIR="$PWD/src"
               export PYTHON_EXECUTABLE=/Users/runner/hostedtoolcache/Python/3.7.12/x64/python
               cd $JCEF_DIR/jcef_build
               export DEVELOPER_DIR=/Applications/Xcode_12.1.1.app/Contents/Developer
               cmake -G "Xcode" -DPROJECT_ARCH=x86_64 ..
               xcodebuild -scheme ALL_BUILD -configuration Release build
               cd ../tools
               ./make_distrib.sh macosx64
               cd ../binary_distrib/macosx64
               zip -r jcef-macosx64.zip *
               mv jcef-macosx64.zip ../../../
            shell: bash
         -  name: Upload
            uses: actions/upload-release-asset@v1
            env:
               GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
               upload_url: ${{ needs.create-release.outputs.upload_url }}
               asset_path: ./jcef-macosx64.zip
               asset_name: jcef-macosx64.zip
               asset_content_type: application/zip
#
#
   build-macosxarm64:
         needs: create-release
         runs-on: macos-latest
         steps:
         -  name: Set up JDK 8
            uses: actions/setup-java@v2
            with:
               distribution: adopt
               java-version: 8
               architecture: aarch64
         -  name: Set up Python 3.7
            uses: actions/setup-python@v2
            with:
               python-version: 3.7
               architecture: x64
         -  name: Checkout jcef project
            run: |
               export JCEF_DIR="$PWD/src"
               git clone https://github.com/chromiumembedded/java-cef.git $JCEF_DIR
               mkdir -p $JCEF_DIR/jcef_build
            shell: bash
         -  name: Build
            run: |
               export JCEF_DIR="$PWD/src"
               export PYTHON_EXECUTABLE=/Users/runner/hostedtoolcache/Python/3.7.12/x64/python
               cd $JCEF_DIR/jcef_build
               export DEVELOPER_DIR=/Applications/Xcode_12.1.1.app/Contents/Developer
               cmake -G "Xcode" -DPROJECT_ARCH=arm64 ..
               xcodebuild -scheme ALL_BUILD -configuration Release build
               cd ../tools
               ./make_distrib.sh macosx64
               cd ../binary_distrib/macosx
               zip -r jcef-macosxarm64.zip *
               mv jcef-macosxarm64.zip../../../
            shell: bash
         -  name: Upload
            uses: actions/upload-release-asset@v1
            env:
               GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
               upload_url: ${{ needs.create-release.outputs.upload_url }}
               asset_path: ./jcef-macosxarm64.zip
               asset_name: jcef-macosxarm64.zip
               asset_content_type: application/zip
